<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/stylesheets/orderRecords.css" />
    <script src="https://cdn.jsdelivr.net/npm/socket.io-client/dist/socket.io.js"></script>
    <title>Document</title>
  </head>
  <body>
    <% if(orderRecords){%> <%orderRecords.reverse().forEach((order) => {%>
    <div class="container" id="<%=order.id%>">
      <div class="content">
        <div class="dishCount">
          <span>總共<%=order.totalQuantity%>份餐點</span>
          <span class="amount"><%=order.amount%>元</span>
          <span class="date">
            <%if(order.expiration===true){%>
            <%=order.date.toLocaleString(undefined, { year: 'numeric', month:
            '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' })%>
            <%}else{if(order.expirationTime-currentTime<=0){%>餐點即將完成
            <%}else{let remainingTimeInMinutes =
            Math.floor((order.expirationTime - currentTime) / 60000); %>
            餐點製作還剩: <%=remainingTimeInMinutes%> 分鐘 <%}}%>
          </span>
        </div>
        <%order.foods.forEach((food) => {%>
        <div class="foods">
          <span class="portions"><%=food.quantity%></span>
          <span class="foodName"><%=food.foodsName%></span>
        </div>
        <%});%>
      </div>
    </div>
    <%});}%>
  </body>
  <script>
    const Host = process.env.RAILWAY_URL || "http://127.0.0.1:3000"; // 使用 Railway URL 或者默認的本地 URL
    const socket = io(Host);
    getFetch(`${Host}/fetch/clientSid`)
      .then((data) => {
        console.log(data.sid);
        socket.emit("clientSid", data.sid);
      })
      .catch((err) => {
        console.log(err);
      });

    function getFetch(url) {
      return fetch(url, {
        cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
        credentials: "same-origin", // include, same-origin, *omit
        headers: {
          "user-agent": "Mozilla/4.0 MDN Example",
          "content-type": "application/json",
        },
        method: "GET",
        mode: "cors", // no-cors, cors, *same-origin
        redirect: "follow", // manual, *follow, error
        referrer: "no-referrer", // *client, no-referrer
      }).then((response) => response.json());
    }

    socket.on("modifyClientOrderExpiration", () => {
      location.reload();
    });
  </script>
</html>
